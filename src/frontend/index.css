/* 1) Reset default browser margins/padding */
html, body {
  margin: 0;
  padding: 0;
  height: 100%; /* So .main-container can take up full screen */
  width: 100%;
  box-sizing: border-box;
}

/* 2) Main container takes up full height and centers content horizontally */
.main-container {
  display: flex;
  justify-content: center;
  align-items: center; /* If you want it centered vertically as well */
  height: 90vh; 
  width: 100%;
  padding-top: 10vh;
}

/* 3) App container is a column inside main-container, 
   occupying as much vertical space as possible */
.app-container {
  display: flex;
  flex-direction: column;
  width: 70%;
  max-width: 1000px;
  height: 100%; /* Let it stretch within .main-container */
  box-sizing: border-box;
}

/* 4) The chat area expands to fill remaining space, 
   and scrolls when content overflows */
.chat-container {
  flex: 1;              /* Fills all leftover vertical space */
  overflow-y: auto;     /* Only the chat should scroll */
  padding: 20px;
  background: #f0f0f0;
  min-height: 10%;
  max-height: 70%;
  border-radius: 2cap;
}

/* Example styles for messages â€” adjust as needed */
.chat-message {
  margin-bottom: 10px;
  padding: 10px;
  border-radius: 5px;
  max-width: 60%;
}

.chat-message.user {
  background: #d1e7dd;
  align-self: flex-end;
}

.chat-message.bot {
  background: #fff;
  align-self: flex-start;
}

/* 5) The input container remains at the bottom */
.input-container {
  display: flex;
  padding: 10px;
  background: #fff;
  border-top: 1px solid #ddd;
}

.input-container input {
  flex: 1;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-right: 10px;
}

.input-container button {
  padding: 10px 20px;
  border: none;
  background: #007bff;
  color: #fff;
  border-radius: 4px;
  cursor: pointer;
}
